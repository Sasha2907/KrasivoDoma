@extends('layouts.Review.main')

@section('content')
<!-- <div class="container mt-4 mb-5">
    <h2 class="mb-4">–ü—Ä–µ–¥–∑–∞–∫–∞–∑ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π</h2>

    {{-- –§–æ—Ä–º–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ --}}
    <form method="GET" action="{{ route('favorites.index') }}" class="mb-4">
        <div class="row g-2">
            <div class="col-md-4">
                <input type="text" name="search" class="form-control" placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"
                       value="{{ request('search') }}">
            </div>

            <div class="col-md-3">
                <select name="category" class="form-select">
                    <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                    @foreach($categories as $category)
                        <option value="{{ $category->id }}" {{ request('category') == $category->id ? 'selected' : '' }}>
                            {{ $category->name }}
                        </option>
                    @endforeach
                </select>
            </div>

            <div class="col-md-3">
                <select name="country" class="form-select">
                    <option value="all">–í—Å–µ —Å—Ç—Ä–∞–Ω—ã</option>
                    @foreach($countries as $country)
                        <option value="{{ $country->country }}" {{ request('country') == $country->country ? 'selected' : '' }}>
                            {{ $country->country }}
                        </option>
                    @endforeach
                </select>
            </div>

            <div class="col-md-2">
                <button type="submit" class="btn btn-outline-primary w-100">–§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å</button>
            </div>
        </div>
    </form>

    {{-- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ --}}
    @if(session('success'))
        <div class="alert alert-success">{{ session('success') }}</div>
    @endif

    {{-- –§–æ—Ä–º–∞ –ø—Ä–µ–¥–∑–∞–∫–∞–∑–∞ --}}
    <form method="POST" action="{{ route('preorders.confirm') }}">
        @csrf

        {{-- –ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã --}}
        <h4 class="mt-4">–ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</h4>
        <div class="row">
            @forelse($favorites as $product)
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <img src="{{ asset('storage/' . $product->image) }}" class="card-img-top" alt="{{ $product->name }}">
                        <div class="card-body">
                            <h5 class="card-title">{{ $product->name }}</h5>
                            <p class="card-text">{{ Str::limit($product->description, 60) }}</p>
                            <p><strong>–ú–∞—Ç–µ—Ä–∏–∞–ª:</strong> {{ $product->material }}</p>

                            <div class="form-check mb-2">
                                <input class="form-check-input" type="checkbox" name="favorites[]" value="{{ $product->id }}" id="fav-{{ $product->id }}">
                                <label class="form-check-label" for="fav-{{ $product->id }}">–î–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞—è–≤–∫—É</label>
                            </div>

                            <a href="{{ route('shtory.show', $product->id) }}" class="btn btn-sm btn-primary">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>

                            <form action="{{ route('favorites.destroy', $product->id) }}" method="POST" class="d-inline">
                                @csrf
                                @method('DELETE')
                                <button type="submit" class="btn btn-sm btn-danger">‚ùå –£–¥–∞–ª–∏—Ç—å</button>
                            </form>
                        </div>
                    </div>
                </div>
            @empty
                <p>–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</p>
            @endforelse
        </div>

        {{-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ --}}
        <h4 class="mt-4">–ú–æ–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</h4>
        @php
            $productTypeNames = [
                'curtains' => '—à—Ç–æ—Ä—ã',
                'tulle' => '—Ç—é–ª—å',
                'roman' => '—Ä–∏–º—Å–∫–∞—è —à—Ç–æ—Ä–∞',
            ];
        @endphp
        @forelse($configs as $config)
            <div class="card mb-3">
                <div class="card-body">
                    <h5>{{ $config->name }} ({{ $productTypeNames[$config->product_type] ?? $config->product_type }})</h5>
                    <p><strong>–†–∞–∑–º–µ—Ä:</strong> {{ $config->width }} x {{ $config->height }} —Å–º</p>
                    <p><strong>–¢–∫–∞–Ω—å:</strong> {{ $config->fabric->name }}</p>
                    @if($config->sewingType)
                        <p><strong>–ü–æ—à–∏–≤:</strong> {{ $config->sewingType->name }}</p>
                    @endif
                    

                    <div class="form-check mt-2">
                        <input class="form-check-input" type="checkbox" name="configs[]" value="{{ $config->id }}" id="config-{{ $config->id }}">
                        <label class="form-check-label" for="config-{{ $config->id }}">–î–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞—è–≤–∫—É</label>
                    </div>

                    <form action="{{ route('constructor.destroy', $config->id) }}" method="POST" class="mt-2">
                        @csrf
                        @method('DELETE')
                        <button type="submit" class="btn btn-danger btn-sm">üóë –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é</button>
                    </form>
                </div>
            </div>
        @empty
            <p>–£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π.</p>
        @endforelse

        {{-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞—è–≤–∫–µ --}}
        <div class="mb-4 mt-4">
            <label for="description" class="form-label">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É</label>
            <textarea name="description" class="form-control" rows="3"></textarea>
        </div>

        <button type="submit" class="btn btn-success">üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</button>
    </form>
</div> -->
<div class="container mt-4 mb-5">
<div class="catalog-header">
            <img src="/Images/logoCircle.png" alt="–õ–æ–≥–æ—Ç–∏–ø" class="catalog-logo">
            <h2 class="catalog-title">–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</h2>
        </div>

    @if(session('success'))
        <div class="alert alert-success alert-dismissible fade show" role="alert" id="success-alert">
            {{ session('success') }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="–ó–∞–∫—Ä—ã—Ç—å"></button>
        </div>
    @endif
    {{-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ --}}
    <form method="POST" action="{{ route('preorders.confirm') }}" id="preorderForm">
        @csrf

        {{-- –ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã --}}
        <h4 class="mt-4">–ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</h4>
        <div class="row">
            @forelse($favorites as $favorite)
                <div class="col-md-4 mb-4" id="favorite-{{ $favorite->id }}">
                    <div class="card">
                        <img src="{{ asset('storage/' . $favorite->image) }}" class="card-img-top" alt="{{ $favorite->name }}">
                        <div class="card-body">
                            <h5 class="card-title">{{ $favorite->name }}</h5>
                            <p class="card-text">{{ Str::limit($favorite->description, 60) }}</p>
                            
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" 
                                           name="selected_items[]" 
                                           value="product_{{ $favorite->id }}" 
                                           id="product_{{ $favorite->id }}">
                                    <label class="form-check-label" for="product_{{ $favorite->id }}">
                                        –í—ã–±—Ä–∞—Ç—å
                                    </label>
                                </div>
                                
                                <button type="button" class="btn btn-sm btn-danger delete-favorite" 
                                        data-id="{{ $favorite->id }}">–£–¥–∞–ª–∏—Ç—å</button>
                            </div>
                        </div>
                    </div>
                </div>
            @empty
                <p>–ù–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤</p>
            @endforelse
        </div>

        {{-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ --}}
        <h4 class="mt-4">–ú–æ–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</h4>
        @forelse($configs as $config)
            <div class="card mb-3" id="config-{{ $config->id }}">
                <div class="card-body">
                    <h5>{{ $config->name }} ({{ $productTypeNames[$config->product_type] ?? $config->product_type }})</h5>
                    <p><strong>–†–∞–∑–º–µ—Ä:</strong> {{ $config->width }} x {{ $config->height }} —Å–º</p>
                    <p><strong>–¢–∫–∞–Ω—å:</strong> {{ $config->fabric->name }}</p>
                    @if($config->sewingType)
                        <p><strong>–ü–æ—à–∏–≤:</strong> {{ $config->sewingType->name }}</p>
                    @endif
                    

                    <div class="form-check mt-2">
                    <input class="form-check-input" type="checkbox" 
                                           name="selected_items[]" 
                                           value="config_{{ $config->id }}" 
                                           id="config_{{ $config->id }}">
                                    <label class="form-check-label" for="config_{{ $config->id }}">
                                        –í—ã–±—Ä–∞—Ç—å
                                    </label>
                    </div>

                    <button type="button" class="btn btn-sm btn-danger delete-config" data-id="{{ $config->id }}">–£–¥–∞–ª–∏—Ç—å</button>
                </div>
            </div>
        @empty
            <p>–£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π.</p>
        @endforelse

        <div class="mt-4">
            <button type="submit" class="btn btn-primary">–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–µ–¥-–∑–∞–∫–∞–∑</button>
        </div>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>

setTimeout(function () {
        let alert = document.getElementById('success-alert');
        if (alert) {
            let bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
        }
    }, 4000); // 4 —Å–µ–∫—É–Ω–¥—ã
function showAlert(message) {
    Swal.fire({
        icon: 'warning',
        title: '–í–Ω–∏–º–∞–Ω–∏–µ',
        text: message,
        confirmButtonText: '–û–ö',
    });
}

    document.addEventListener('DOMContentLoaded', function() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã
    document.getElementById('preorderForm').addEventListener('submit', function(e) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã
        const checkedItems = document.querySelectorAll('input[name="selected_items[]"]:checked');
        if (checkedItems.length === 0) {
            e.preventDefault();
            
            showAlert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é");  
            return;
        }
        
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const submitBtn = document.getElementById('submitBtn');
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm"></span> –û–±—Ä–∞–±–æ—Ç–∫–∞...';
    });

    // –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤...
});
document.addEventListener('DOMContentLoaded', function() {
    // –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
    async function deleteItem(url, elementId) {
    const result = await Swal.fire({
        title: '–í—ã —É–≤–µ—Ä–µ–Ω—ã?',
        text: "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: '–£–¥–∞–ª–∏—Ç—å',
        cancelButtonText: '–û—Ç–º–µ–Ω–∞'
    });

    if (!result.isConfirmed) return;

    try {
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content,
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({
                _method: 'DELETE'
            })
        });

        const data = await response.json();

        if (data.success) {
            const element = document.getElementById(elementId);
            if (element) {
                element.style.transition = 'opacity 0.3s';
                element.style.opacity = '0';
                setTimeout(() => element.remove(), 300);
            }

            await Swal.fire({
                title: '–£–¥–∞–ª–µ–Ω–æ!',
                text: '–≠–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.',
                icon: 'success',
                timer: 1500,
                showConfirmButton: false
            });
        } else {
            await Swal.fire({
                title: '–û—à–∏–±–∫–∞!',
                text: data.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏.',
                icon: 'error'
            });
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        await Swal.fire({
            title: '–°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞',
            text: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏.',
            icon: 'error'
        });
    }
}

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    document.querySelectorAll('.delete-favorite').forEach(button => {
        button.addEventListener('click', function() {
            const id = this.dataset.id;
            deleteItem(`/favorites/${id}`, `favorite-${id}`);
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
    document.querySelectorAll('.delete-config').forEach(button => {
        button.addEventListener('click', function() {
            const id = this.dataset.id;
            deleteItem(`/constructor/${id}`, `config-${id}`);
        });
    });
});
</script>

@endsection